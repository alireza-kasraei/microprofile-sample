<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>sample-devk</artifactId>
		<groupId>net.devk</groupId>
		<version>1.0-SNAPSHOT</version>
	</parent>
	<artifactId>sample-devk-web</artifactId>
	<packaging>war</packaging>
	<name>sample-devk Web module</name>

	<properties>
		<testServerHttpPort>9080</testServerHttpPort>
		<testServerHttpsPort>9443</testServerHttpsPort>
		<warContext>sample-devk</warContext>
	</properties>

	<dependencies>
		<dependency>
			<groupId>net.devk</groupId>
			<artifactId>sample-devk-service</artifactId>
		</dependency>
		<!-- <dependency> <groupId>ir.bmi.identity</groupId> <artifactId>client-security-api</artifactId> 
			<exclusions> <exclusion> <groupId>javax.enterprise</groupId> <artifactId>cdi-api</artifactId> 
			</exclusion> <exclusion> <groupId>javax.ws.rs</groupId> <artifactId>javax.ws.rs-api</artifactId> 
			</exclusion> </exclusions> </dependency> -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
		</dependency>

		<dependency>
			<groupId>io.openliberty.features</groupId>
			<artifactId>jaxrs-2.1</artifactId>
			<type>esa</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.openliberty.features</groupId>
			<artifactId>jsonp-1.1</artifactId>
			<type>esa</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.openliberty.features</groupId>
			<artifactId>jsonb-1.0</artifactId>
			<type>esa</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.openliberty.features</groupId>
			<artifactId>mpOpenAPI-1.0</artifactId>
			<type>esa</type>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>3.1.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-extension-providers</artifactId>
			<version>3.1.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.0.4</version>
			<scope>test</scope>
		</dependency>


	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<packagingExcludes>pom.xml</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<phase>test</phase>
						<id>default-test</id>
						<configuration>
							<reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.wasdev.wlp.maven.plugins</groupId>
				<artifactId>liberty-maven-plugin</artifactId>
				<configuration>
					<configFile>src/main/wlp/server.xml</configFile>
					<looseApplication>true</looseApplication>
					<installAppPackages>project</installAppPackages>
					<appsDirectory>apps</appsDirectory>
					<assemblyArtifact>
						<groupId>io.openliberty</groupId>
						<artifactId>openliberty-runtime</artifactId>
						<version>${liberty.version}</version>
						<type>zip</type>
					</assemblyArtifact>
					<bootstrapProperties>
						<default.http.port>${testServerHttpPort}</default.http.port>
						<default.https.port>${testServerHttpsPort}</default.https.port>
						<app.context.root>${warContext}</app.context.root>
						<app.location>${project.build.finalName}</app.location>
					</bootstrapProperties>
				</configuration>
				<executions>
					<execution>
						<id>stop-server-before-clean</id>
						<phase>pre-clean</phase>
						<goals>
							<goal>stop-server</goal>
						</goals>
					</execution>
					<execution>
						<id>create-server</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>install-server</goal>
							<goal>create-server</goal>
						</goals>
					</execution>
					<execution>
						<id>install-apps</id>
						<phase>package</phase>
						<goals>
							<goal>install-apps</goal>
						</goals>
					</execution>
					<execution>
						<id>package-server</id>
						<phase>package</phase>
						<goals>
							<goal>package-server</goal>
						</goals>
					</execution>
					<execution>
						<id>start-server</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>test-start-server</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-server</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>test-stop-server</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>install-jar</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.apache.derby</groupId>
									<artifactId>derby</artifactId>
									<version>10.12.1.1</version>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/liberty/wlp/usr/shared/resources/derby</outputDirectory>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/it/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<liberty.test.port>${testServerHttpPort}</liberty.test.port>
								<war.name>${warContext}</war.name>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<summaryFile>${project.build.directory}/test-reports/it/failsafe-summary.xml</summaryFile>
					<reportsDirectory>${project.build.directory}/test-reports/it</reportsDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.26.1</version>
				<configuration>
					<images>
						<image>
							<name>sadad-card/sample-devk</name>
							<build>
								<tags>
									<!-- <tag>${project.artifactId}</tag> -->
									<tag>${project.version}</tag>
								</tags>
								<dockerFile>${project.basedir}/Dockerfile</dockerFile>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>

	</build>
</project>
